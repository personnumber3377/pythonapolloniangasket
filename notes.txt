

function complexDescartes(c1, c2, c3, k4) {
  // Curvature and center calculations for new circles
  let k1 = c1.bend;
  let k2 = c2.bend;
  let k3 = c3.bend;
  let z1 = c1.center;
  let z2 = c2.center;
  let z3 = c3.center;

  let zk1 = z1.scale(k1);
  let zk2 = z2.scale(k2);
  let zk3 = z3.scale(k3);
  let sum = zk1.add(zk2).add(zk3);

  let root = zk1.mult(zk2).add(zk2.mult(zk3)).add(zk1.mult(zk3));
  root = root.sqrt().scale(2);
  let center1 = sum.add(root).scale(1 / k4[0]);
  let center2 = sum.sub(root).scale(1 / k4[0]);
  let center3 = sum.add(root).scale(1 / k4[1]);
  let center4 = sum.sub(root).scale(1 / k4[1]);

  return [
    new Circle(k4[0], center1.a, center1.b),
    new Circle(k4[0], center2.a, center2.b),
    new Circle(k4[1], center3.a, center3.b),
    new Circle(k4[1], center4.a, center4.b),
  ];
}








Ok, so there is a bug in the z4 function:





z1.a == 400 
z1.b == 400 
z2.a == 600 
z2.b == 400 
z3.a == 200 
z3.b == 400 
k1 == -0.0025 
k2 == 0.005 
k3 == 0.005 
sum == [object Object] 
sum.a == 3 
sum.b == 3 













k4 == [0.0075, 0.0075]
k1 == -0.0025
k2 == 0.005
k3 == 0.005
z1 == 0j
z2 == (200+0j)
z3 == (-200+0j)
sum == 0j
dividend1 == 0j
dividend2 == 0j
center_fourth == [0j, 0j]


















Our code:







Their code:

center1.a == 666.8972108038369 
center1.b == 372.82334307305314 
center2.a == 142.07310882716646 
center2.b == 326.2001990076536 
center3.a == 666.8972108038369 
center3.b == 372.82334307305314 
center4.a == 142.07310882716646 
center4.b == 326.2001990076536








